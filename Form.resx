<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>